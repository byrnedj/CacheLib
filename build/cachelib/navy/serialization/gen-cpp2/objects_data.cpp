/**
 * Autogenerated by Thrift for objects.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "objects_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {

const std::array<folly::StringPiece, 5> TStructDataStorage<::facebook::cachelib::navy::serialization::IndexEntry>::fields_names = {{
  "key",
  "address",
  "sizeHint",
  "totalHits",
  "currentHits",
}};
const std::array<int16_t, 5> TStructDataStorage<::facebook::cachelib::navy::serialization::IndexEntry>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::facebook::cachelib::navy::serialization::IndexEntry>::fields_types = {{
  TType::T_I32,
  TType::T_I32,
  TType::T_I16,
  TType::T_BYTE,
  TType::T_BYTE,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::IndexBucket>::fields_names = {{
  "bucketId",
  "entries",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::IndexBucket>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::IndexBucket>::fields_types = {{
  TType::T_I32,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 6> TStructDataStorage<::facebook::cachelib::navy::serialization::Region>::fields_names = {{
  "regionId",
  "lastEntryEndOffset",
  "classId",
  "numItems",
  "pinned",
  "priority",
}};
const std::array<int16_t, 6> TStructDataStorage<::facebook::cachelib::navy::serialization::Region>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
}};
const std::array<protocol::TType, 6> TStructDataStorage<::facebook::cachelib::navy::serialization::Region>::fields_types = {{
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
  TType::T_BOOL,
  TType::T_I32,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::RegionData>::fields_names = {{
  "regions",
  "regionSize",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::RegionData>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::RegionData>::fields_types = {{
  TType::T_LIST,
  TType::T_I32,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::FifoPolicyNodeData>::fields_names = {{
  "idx",
  "trackTime",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::FifoPolicyNodeData>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::FifoPolicyNodeData>::fields_types = {{
  TType::T_I32,
  TType::T_I64,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::facebook::cachelib::navy::serialization::FifoPolicyData>::fields_names = {{
  "queue",
}};
const std::array<int16_t, 1> TStructDataStorage<::facebook::cachelib::navy::serialization::FifoPolicyData>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::facebook::cachelib::navy::serialization::FifoPolicyData>::fields_types = {{
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessStats>::fields_names = {{
  "totalHits",
  "currHits",
  "numReinsertions",
}};
const std::array<int16_t, 3> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessStats>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessStats>::fields_types = {{
  TType::T_BYTE,
  TType::T_BYTE,
  TType::T_BYTE,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessStatsPair>::fields_names = {{
  "key",
  "stats",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessStatsPair>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessStatsPair>::fields_types = {{
  TType::T_I64,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessTracker>::fields_names = {{
  "deprecated_data",
  "data",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessTracker>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::navy::serialization::AccessTracker>::fields_types = {{
  TType::T_MAP,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 10> TStructDataStorage<::facebook::cachelib::navy::serialization::BlockCacheConfig>::fields_names = {{
  "version",
  "cacheBaseOffset",
  "cacheSize",
  "allocAlignSize",
  "sizeClasses",
  "checksum",
  "sizeDist",
  "holeCount",
  "holeSizeTotal",
  "reinsertionPolicyEnabled",
}};
const std::array<int16_t, 10> TStructDataStorage<::facebook::cachelib::navy::serialization::BlockCacheConfig>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
}};
const std::array<protocol::TType, 10> TStructDataStorage<::facebook::cachelib::navy::serialization::BlockCacheConfig>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_I32,
  TType::T_SET,
  TType::T_BOOL,
  TType::T_MAP,
  TType::T_I64,
  TType::T_I64,
  TType::T_BOOL,
}};

const std::array<folly::StringPiece, 7> TStructDataStorage<::facebook::cachelib::navy::serialization::BigHashPersistentData>::fields_names = {{
  "version",
  "generationTime",
  "itemCount",
  "bucketSize",
  "cacheBaseOffset",
  "numBuckets",
  "sizeDist",
}};
const std::array<int16_t, 7> TStructDataStorage<::facebook::cachelib::navy::serialization::BigHashPersistentData>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
const std::array<protocol::TType, 7> TStructDataStorage<::facebook::cachelib::navy::serialization::BigHashPersistentData>::fields_types = {{
  TType::T_I32,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_MAP,
}};

} // namespace thrift
} // namespace apache
