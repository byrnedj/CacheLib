/**
 * Autogenerated by Thrift for objects.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "objects_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {

const std::array<folly::StringPiece, 8> TStructDataStorage<::facebook::cachelib::serialization::SlabAllocatorObject>::fields_names = {{
  "memorySize",
  "canAllocate",
  "memoryPoolSize",
  "slabSize",
  "minAllocSize",
  "nextSlabIdx",
  "freeSlabIdxs",
  "advisedSlabIdxs",
}};
const std::array<int16_t, 8> TStructDataStorage<::facebook::cachelib::serialization::SlabAllocatorObject>::fields_ids = {{
  2,
  4,
  5,
  7,
  8,
  9,
  10,
  11,
}};
const std::array<protocol::TType, 8> TStructDataStorage<::facebook::cachelib::serialization::SlabAllocatorObject>::fields_types = {{
  TType::T_I64,
  TType::T_BOOL,
  TType::T_MAP,
  TType::T_I64,
  TType::T_I64,
  TType::T_I32,
  TType::T_LIST,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 8> TStructDataStorage<::facebook::cachelib::serialization::AllocationClassObject>::fields_names = {{
  "classId",
  "allocationSize",
  "currOffset",
  "canAllocate",
  "freedAllocationsObject",
  "currSlabIdx",
  "allocatedSlabIdxs",
  "freeSlabIdxs",
}};
const std::array<int16_t, 8> TStructDataStorage<::facebook::cachelib::serialization::AllocationClassObject>::fields_ids = {{
  1,
  2,
  4,
  8,
  9,
  10,
  11,
  12,
}};
const std::array<protocol::TType, 8> TStructDataStorage<::facebook::cachelib::serialization::AllocationClassObject>::fields_types = {{
  TType::T_BYTE,
  TType::T_I64,
  TType::T_I64,
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_I32,
  TType::T_LIST,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 10> TStructDataStorage<::facebook::cachelib::serialization::MemoryPoolObject>::fields_names = {{
  "id",
  "maxSize",
  "currSlabAllocSize",
  "currAllocSize",
  "acSizes",
  "ac",
  "numSlabResize",
  "numSlabRebalance",
  "freeSlabIdxs",
  "numSlabsAdvised",
}};
const std::array<int16_t, 10> TStructDataStorage<::facebook::cachelib::serialization::MemoryPoolObject>::fields_ids = {{
  1,
  2,
  3,
  4,
  6,
  7,
  8,
  9,
  10,
  11,
}};
const std::array<protocol::TType, 10> TStructDataStorage<::facebook::cachelib::serialization::MemoryPoolObject>::fields_types = {{
  TType::T_BYTE,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_I64,
  TType::T_I64,
  TType::T_LIST,
  TType::T_I64,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::facebook::cachelib::serialization::MemoryPoolManagerObject>::fields_names = {{
  "pools",
  "poolsByName",
  "nextPoolId",
}};
const std::array<int16_t, 3> TStructDataStorage<::facebook::cachelib::serialization::MemoryPoolManagerObject>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::facebook::cachelib::serialization::MemoryPoolManagerObject>::fields_types = {{
  TType::T_LIST,
  TType::T_MAP,
  TType::T_BYTE,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::facebook::cachelib::serialization::MemoryAllocatorObject>::fields_names = {{
  "allocSizes",
  "enableZeroedSlabAllocs",
  "lockMemory",
  "slabAllocator",
  "memoryPoolManager",
}};
const std::array<int16_t, 5> TStructDataStorage<::facebook::cachelib::serialization::MemoryAllocatorObject>::fields_ids = {{
  1,
  4,
  5,
  2,
  3,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::facebook::cachelib::serialization::MemoryAllocatorObject>::fields_types = {{
  TType::T_SET,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

} // namespace thrift
} // namespace apache
