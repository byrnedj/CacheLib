/**
 * Autogenerated by Thrift for objects.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/frozen/Frozen.h>
#include "objects_types.h"
#include "cachelib/allocator/datastruct/serialize/gen-cpp2/objects_layouts.h"
namespace apache { namespace thrift { namespace frozen {


FROZEN_TYPE(::facebook::cachelib::serialization::SlabAllocatorObject,
  FROZEN_FIELD_REQ(memorySize, 2, ::std::int64_t)
  FROZEN_FIELD_REQ(canAllocate, 4, bool)
  FROZEN_FIELD_REQ(memoryPoolSize, 5, ::std::map<::std::int8_t, ::std::int64_t>)
  FROZEN_FIELD_REQ(slabSize, 7, ::std::int64_t)
  FROZEN_FIELD_REQ(minAllocSize, 8, ::std::int64_t)
  FROZEN_FIELD_REQ(nextSlabIdx, 9, ::std::int32_t)
  FROZEN_FIELD_REQ(freeSlabIdxs, 10, ::std::vector<::std::int32_t>)
  FROZEN_FIELD(advisedSlabIdxs, 11, ::std::vector<::std::int32_t>)
  FROZEN_VIEW(
    FROZEN_VIEW_FIELD_REQ(memorySize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(canAllocate, bool)
    FROZEN_VIEW_FIELD_REQ(memoryPoolSize, ::std::map<::std::int8_t, ::std::int64_t>)
    FROZEN_VIEW_FIELD_REQ(slabSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(minAllocSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(nextSlabIdx, ::std::int32_t)
    FROZEN_VIEW_FIELD_REQ(freeSlabIdxs, ::std::vector<::std::int32_t>)
    FROZEN_VIEW_FIELD(advisedSlabIdxs, ::std::vector<::std::int32_t>))
  FROZEN_SAVE_INLINE(
    FROZEN_SAVE_FIELD(memorySize)
    FROZEN_SAVE_FIELD(canAllocate)
    FROZEN_SAVE_FIELD(memoryPoolSize)
    FROZEN_SAVE_FIELD(slabSize)
    FROZEN_SAVE_FIELD(minAllocSize)
    FROZEN_SAVE_FIELD(nextSlabIdx)
    FROZEN_SAVE_FIELD(freeSlabIdxs)
    FROZEN_SAVE_FIELD(advisedSlabIdxs))
  FROZEN_LOAD_INLINE(
    FROZEN_LOAD_FIELD(memorySize, 2)
    FROZEN_LOAD_FIELD(canAllocate, 4)
    FROZEN_LOAD_FIELD(memoryPoolSize, 5)
    FROZEN_LOAD_FIELD(slabSize, 7)
    FROZEN_LOAD_FIELD(minAllocSize, 8)
    FROZEN_LOAD_FIELD(nextSlabIdx, 9)
    FROZEN_LOAD_FIELD(freeSlabIdxs, 10)
    FROZEN_LOAD_FIELD(advisedSlabIdxs, 11)));

FROZEN_TYPE(::facebook::cachelib::serialization::AllocationClassObject,
  FROZEN_FIELD_REQ(classId, 1, ::std::int8_t)
  FROZEN_FIELD_REQ(allocationSize, 2, ::std::int64_t)
  FROZEN_FIELD_REQ(currOffset, 4, ::std::int64_t)
  FROZEN_FIELD_REQ(canAllocate, 8, bool)
  FROZEN_FIELD(freedAllocationsObject, 9, ::facebook::cachelib::serialization::SListObject)
  FROZEN_FIELD_REQ(currSlabIdx, 10, ::std::int32_t)
  FROZEN_FIELD_REQ(allocatedSlabIdxs, 11, ::std::vector<::std::int32_t>)
  FROZEN_FIELD_REQ(freeSlabIdxs, 12, ::std::vector<::std::int32_t>)
  FROZEN_VIEW(
    FROZEN_VIEW_FIELD_REQ(classId, ::std::int8_t)
    FROZEN_VIEW_FIELD_REQ(allocationSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(currOffset, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(canAllocate, bool)
    FROZEN_VIEW_FIELD(freedAllocationsObject, ::facebook::cachelib::serialization::SListObject)
    FROZEN_VIEW_FIELD_REQ(currSlabIdx, ::std::int32_t)
    FROZEN_VIEW_FIELD_REQ(allocatedSlabIdxs, ::std::vector<::std::int32_t>)
    FROZEN_VIEW_FIELD_REQ(freeSlabIdxs, ::std::vector<::std::int32_t>))
  FROZEN_SAVE_INLINE(
    FROZEN_SAVE_FIELD(classId)
    FROZEN_SAVE_FIELD(allocationSize)
    FROZEN_SAVE_FIELD(currOffset)
    FROZEN_SAVE_FIELD(canAllocate)
    FROZEN_SAVE_FIELD(freedAllocationsObject)
    FROZEN_SAVE_FIELD(currSlabIdx)
    FROZEN_SAVE_FIELD(allocatedSlabIdxs)
    FROZEN_SAVE_FIELD(freeSlabIdxs))
  FROZEN_LOAD_INLINE(
    FROZEN_LOAD_FIELD(classId, 1)
    FROZEN_LOAD_FIELD(allocationSize, 2)
    FROZEN_LOAD_FIELD(currOffset, 4)
    FROZEN_LOAD_FIELD(canAllocate, 8)
    FROZEN_LOAD_FIELD(freedAllocationsObject, 9)
    FROZEN_LOAD_FIELD(currSlabIdx, 10)
    FROZEN_LOAD_FIELD(allocatedSlabIdxs, 11)
    FROZEN_LOAD_FIELD(freeSlabIdxs, 12)));

FROZEN_TYPE(::facebook::cachelib::serialization::MemoryPoolObject,
  FROZEN_FIELD_REQ(id, 1, ::std::int8_t)
  FROZEN_FIELD_REQ(maxSize, 2, ::std::int64_t)
  FROZEN_FIELD_REQ(currSlabAllocSize, 3, ::std::int64_t)
  FROZEN_FIELD_REQ(currAllocSize, 4, ::std::int64_t)
  FROZEN_FIELD_REQ(acSizes, 6, ::std::vector<::std::int64_t>)
  FROZEN_FIELD_REQ(ac, 7, ::std::vector<::facebook::cachelib::serialization::AllocationClassObject>)
  FROZEN_FIELD(numSlabResize, 8, ::std::int64_t)
  FROZEN_FIELD(numSlabRebalance, 9, ::std::int64_t)
  FROZEN_FIELD_REQ(freeSlabIdxs, 10, ::std::vector<::std::int32_t>)
  FROZEN_FIELD(numSlabsAdvised, 11, ::std::int64_t)
  FROZEN_VIEW(
    FROZEN_VIEW_FIELD_REQ(id, ::std::int8_t)
    FROZEN_VIEW_FIELD_REQ(maxSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(currSlabAllocSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(currAllocSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(acSizes, ::std::vector<::std::int64_t>)
    FROZEN_VIEW_FIELD_REQ(ac, ::std::vector<::facebook::cachelib::serialization::AllocationClassObject>)
    FROZEN_VIEW_FIELD(numSlabResize, ::std::int64_t)
    FROZEN_VIEW_FIELD(numSlabRebalance, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(freeSlabIdxs, ::std::vector<::std::int32_t>)
    FROZEN_VIEW_FIELD(numSlabsAdvised, ::std::int64_t))
  FROZEN_SAVE_INLINE(
    FROZEN_SAVE_FIELD(id)
    FROZEN_SAVE_FIELD(maxSize)
    FROZEN_SAVE_FIELD(currSlabAllocSize)
    FROZEN_SAVE_FIELD(currAllocSize)
    FROZEN_SAVE_FIELD(acSizes)
    FROZEN_SAVE_FIELD(ac)
    FROZEN_SAVE_FIELD(numSlabResize)
    FROZEN_SAVE_FIELD(numSlabRebalance)
    FROZEN_SAVE_FIELD(freeSlabIdxs)
    FROZEN_SAVE_FIELD(numSlabsAdvised))
  FROZEN_LOAD_INLINE(
    FROZEN_LOAD_FIELD(id, 1)
    FROZEN_LOAD_FIELD(maxSize, 2)
    FROZEN_LOAD_FIELD(currSlabAllocSize, 3)
    FROZEN_LOAD_FIELD(currAllocSize, 4)
    FROZEN_LOAD_FIELD(acSizes, 6)
    FROZEN_LOAD_FIELD(ac, 7)
    FROZEN_LOAD_FIELD(numSlabResize, 8)
    FROZEN_LOAD_FIELD(numSlabRebalance, 9)
    FROZEN_LOAD_FIELD(freeSlabIdxs, 10)
    FROZEN_LOAD_FIELD(numSlabsAdvised, 11)));

FROZEN_TYPE(::facebook::cachelib::serialization::MemoryPoolManagerObject,
  FROZEN_FIELD(pools, 1, ::std::vector<::facebook::cachelib::serialization::MemoryPoolObject>)
  FROZEN_FIELD(poolsByName, 2, ::std::map<::std::string, ::std::int8_t>)
  FROZEN_FIELD(nextPoolId, 3, ::std::int8_t)
  FROZEN_VIEW(
    FROZEN_VIEW_FIELD(pools, ::std::vector<::facebook::cachelib::serialization::MemoryPoolObject>)
    FROZEN_VIEW_FIELD(poolsByName, ::std::map<::std::string, ::std::int8_t>)
    FROZEN_VIEW_FIELD(nextPoolId, ::std::int8_t))
  FROZEN_SAVE_INLINE(
    FROZEN_SAVE_FIELD(pools)
    FROZEN_SAVE_FIELD(poolsByName)
    FROZEN_SAVE_FIELD(nextPoolId))
  FROZEN_LOAD_INLINE(
    FROZEN_LOAD_FIELD(pools, 1)
    FROZEN_LOAD_FIELD(poolsByName, 2)
    FROZEN_LOAD_FIELD(nextPoolId, 3)));

FROZEN_TYPE(::facebook::cachelib::serialization::MemoryAllocatorObject,
  FROZEN_FIELD_REQ(allocSizes, 1, ::std::set<::std::int64_t>)
  FROZEN_FIELD_REQ(enableZeroedSlabAllocs, 4, bool)
  FROZEN_FIELD(lockMemory, 5, bool)
  FROZEN_FIELD_REQ(slabAllocator, 2, ::facebook::cachelib::serialization::SlabAllocatorObject)
  FROZEN_FIELD_REQ(memoryPoolManager, 3, ::facebook::cachelib::serialization::MemoryPoolManagerObject)
  FROZEN_VIEW(
    FROZEN_VIEW_FIELD_REQ(allocSizes, ::std::set<::std::int64_t>)
    FROZEN_VIEW_FIELD_REQ(enableZeroedSlabAllocs, bool)
    FROZEN_VIEW_FIELD(lockMemory, bool)
    FROZEN_VIEW_FIELD_REQ(slabAllocator, ::facebook::cachelib::serialization::SlabAllocatorObject)
    FROZEN_VIEW_FIELD_REQ(memoryPoolManager, ::facebook::cachelib::serialization::MemoryPoolManagerObject))
  FROZEN_SAVE_INLINE(
    FROZEN_SAVE_FIELD(allocSizes)
    FROZEN_SAVE_FIELD(enableZeroedSlabAllocs)
    FROZEN_SAVE_FIELD(lockMemory)
    FROZEN_SAVE_FIELD(slabAllocator)
    FROZEN_SAVE_FIELD(memoryPoolManager))
  FROZEN_LOAD_INLINE(
    FROZEN_LOAD_FIELD(allocSizes, 1)
    FROZEN_LOAD_FIELD(enableZeroedSlabAllocs, 4)
    FROZEN_LOAD_FIELD(lockMemory, 5)
    FROZEN_LOAD_FIELD(slabAllocator, 2)
    FROZEN_LOAD_FIELD(memoryPoolManager, 3)));

}}} // apache::thrift::frozen
