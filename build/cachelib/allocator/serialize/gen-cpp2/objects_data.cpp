/**
 * Autogenerated by Thrift for objects.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "objects_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {

const std::array<folly::StringPiece, 11> TStructDataStorage<::facebook::cachelib::serialization::CacheAllocatorMetadata>::fields_names = {{
  "allocatorVersion",
  "cacheCreationTime",
  "accessType",
  "mmType",
  "fragmentationSize",
  "compactCachePools",
  "numPermanentItems",
  "numChainedParentItems",
  "numChainedChildItems",
  "ramFormatVersion",
  "numAbortedSlabReleases",
}};
const std::array<int16_t, 11> TStructDataStorage<::facebook::cachelib::serialization::CacheAllocatorMetadata>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
}};
const std::array<protocol::TType, 11> TStructDataStorage<::facebook::cachelib::serialization::CacheAllocatorMetadata>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_MAP,
  TType::T_LIST,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::facebook::cachelib::serialization::NvmCacheMetadata>::fields_names = {{
  "nvmFormatVersion",
  "creationTime",
  "safeShutDown",
  "encryptionEnabled",
  "truncateAllocSize",
}};
const std::array<int16_t, 5> TStructDataStorage<::facebook::cachelib::serialization::NvmCacheMetadata>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::facebook::cachelib::serialization::NvmCacheMetadata>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_BOOL,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheMetadataObject>::fields_names = {{
  "keySize",
  "valueSize",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheMetadataObject>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheMetadataObject>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheAllocatorObject>::fields_names = {{
  "chunks",
  "ccMetadata",
}};
const std::array<int16_t, 2> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheAllocatorObject>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheAllocatorObject>::fields_types = {{
  TType::T_LIST,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheAllocatorManagerObject>::fields_names = {{
  "allocators",
}};
const std::array<int16_t, 1> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheAllocatorManagerObject>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::facebook::cachelib::serialization::CompactCacheAllocatorManagerObject>::fields_types = {{
  TType::T_MAP,
}};

const std::array<folly::StringPiece, 6> TStructDataStorage<::facebook::cachelib::serialization::MMLruConfig>::fields_names = {{
  "lruRefreshTime",
  "updateOnWrite",
  "lruInsertionPointSpec",
  "updateOnRead",
  "tryLockUpdate",
  "lruRefreshRatio",
}};
const std::array<int16_t, 6> TStructDataStorage<::facebook::cachelib::serialization::MMLruConfig>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
}};
const std::array<protocol::TType, 6> TStructDataStorage<::facebook::cachelib::serialization::MMLruConfig>::fields_types = {{
  TType::T_I32,
  TType::T_BOOL,
  TType::T_I32,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_DOUBLE,
}};

const std::array<folly::StringPiece, 6> TStructDataStorage<::facebook::cachelib::serialization::MMLruObject>::fields_names = {{
  "config",
  "evictions",
  "insertionPoint",
  "tailSize",
  "lru",
  "compressedInsertionPoint",
}};
const std::array<int16_t, 6> TStructDataStorage<::facebook::cachelib::serialization::MMLruObject>::fields_ids = {{
  1,
  5,
  6,
  7,
  8,
  9,
}};
const std::array<protocol::TType, 6> TStructDataStorage<::facebook::cachelib::serialization::MMLruObject>::fields_types = {{
  TType::T_STRUCT,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_STRUCT,
  TType::T_I64,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::facebook::cachelib::serialization::MMLruCollection>::fields_names = {{
  "pools",
}};
const std::array<int16_t, 1> TStructDataStorage<::facebook::cachelib::serialization::MMLruCollection>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::facebook::cachelib::serialization::MMLruCollection>::fields_types = {{
  TType::T_MAP,
}};

const std::array<folly::StringPiece, 8> TStructDataStorage<::facebook::cachelib::serialization::MM2QConfig>::fields_names = {{
  "lruRefreshTime",
  "updateOnWrite",
  "hotSizePercent",
  "coldSizePercent",
  "updateOnRead",
  "tryLockUpdate",
  "rebalanceOnRecordAccess",
  "lruRefreshRatio",
}};
const std::array<int16_t, 8> TStructDataStorage<::facebook::cachelib::serialization::MM2QConfig>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};
const std::array<protocol::TType, 8> TStructDataStorage<::facebook::cachelib::serialization::MM2QConfig>::fields_types = {{
  TType::T_I32,
  TType::T_BOOL,
  TType::T_I32,
  TType::T_I32,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_DOUBLE,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::facebook::cachelib::serialization::MM2QObject>::fields_names = {{
  "config",
  "tailTrackingEnabled",
  "evictions",
  "lrus",
}};
const std::array<int16_t, 4> TStructDataStorage<::facebook::cachelib::serialization::MM2QObject>::fields_ids = {{
  1,
  13,
  11,
  12,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::facebook::cachelib::serialization::MM2QObject>::fields_types = {{
  TType::T_STRUCT,
  TType::T_BOOL,
  TType::T_I64,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::facebook::cachelib::serialization::MM2QCollection>::fields_names = {{
  "pools",
}};
const std::array<int16_t, 1> TStructDataStorage<::facebook::cachelib::serialization::MM2QCollection>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::facebook::cachelib::serialization::MM2QCollection>::fields_types = {{
  TType::T_MAP,
}};

const std::array<folly::StringPiece, 7> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUConfig>::fields_names = {{
  "lruRefreshTime",
  "updateOnWrite",
  "windowToCacheSizeRatio",
  "tinySizePercent",
  "updateOnRead",
  "tryLockUpdate",
  "lruRefreshRatio",
}};
const std::array<int16_t, 7> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUConfig>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
const std::array<protocol::TType, 7> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUConfig>::fields_types = {{
  TType::T_I32,
  TType::T_BOOL,
  TType::T_I32,
  TType::T_I32,
  TType::T_BOOL,
  TType::T_BOOL,
  TType::T_DOUBLE,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUObject>::fields_names = {{
  "config",
  "evictions",
  "lrus",
}};
const std::array<int16_t, 3> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUObject>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUObject>::fields_types = {{
  TType::T_STRUCT,
  TType::T_I64,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUCollection>::fields_names = {{
  "pools",
}};
const std::array<int16_t, 1> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUCollection>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::facebook::cachelib::serialization::MMTinyLFUCollection>::fields_types = {{
  TType::T_MAP,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::facebook::cachelib::serialization::ChainedHashTableObject>::fields_names = {{
  "bucketsPower",
  "locksPower",
  "numKeys",
  "hasherMagicId",
}};
const std::array<int16_t, 4> TStructDataStorage<::facebook::cachelib::serialization::ChainedHashTableObject>::fields_ids = {{
  1,
  2,
  3,
  4,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::facebook::cachelib::serialization::ChainedHashTableObject>::fields_types = {{
  TType::T_I32,
  TType::T_I32,
  TType::T_I64,
  TType::T_I32,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::facebook::cachelib::serialization::MMTTLBucketObject>::fields_names = {{
  "expirationTime",
  "creationTime",
  "dList",
}};
const std::array<int16_t, 3> TStructDataStorage<::facebook::cachelib::serialization::MMTTLBucketObject>::fields_ids = {{
  4,
  5,
  6,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::facebook::cachelib::serialization::MMTTLBucketObject>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::facebook::cachelib::serialization::TTLBucketCollection>::fields_names = {{
  "buckets",
  "minEpoch",
  "maxTTL",
  "interval",
}};
const std::array<int16_t, 4> TStructDataStorage<::facebook::cachelib::serialization::TTLBucketCollection>::fields_ids = {{
  1,
  2,
  3,
  4,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::facebook::cachelib::serialization::TTLBucketCollection>::fields_types = {{
  TType::T_MAP,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
}};

} // namespace thrift
} // namespace apache
