/**
 * Autogenerated by Thrift for BloomFilter.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <thrift/lib/cpp2/frozen/Frozen.h>
#include "BloomFilter_types.h"
namespace apache { namespace thrift { namespace frozen {


FROZEN_TYPE(::facebook::cachelib::serialization::BloomFilterPersistentData,
  FROZEN_FIELD_REQ(numFilters, 1, ::std::int32_t)
  FROZEN_FIELD_REQ(hashTableBitSize, 2, ::std::int64_t)
  FROZEN_FIELD_REQ(filterByteSize, 3, ::std::int64_t)
  FROZEN_FIELD_REQ(fragmentSize, 4, ::std::int32_t)
  FROZEN_FIELD_REQ(seeds, 5, ::std::vector<::std::int64_t>)
  FROZEN_VIEW(
    FROZEN_VIEW_FIELD_REQ(numFilters, ::std::int32_t)
    FROZEN_VIEW_FIELD_REQ(hashTableBitSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(filterByteSize, ::std::int64_t)
    FROZEN_VIEW_FIELD_REQ(fragmentSize, ::std::int32_t)
    FROZEN_VIEW_FIELD_REQ(seeds, ::std::vector<::std::int64_t>))
  FROZEN_SAVE_INLINE(
    FROZEN_SAVE_FIELD(numFilters)
    FROZEN_SAVE_FIELD(hashTableBitSize)
    FROZEN_SAVE_FIELD(filterByteSize)
    FROZEN_SAVE_FIELD(fragmentSize)
    FROZEN_SAVE_FIELD(seeds))
  FROZEN_LOAD_INLINE(
    FROZEN_LOAD_FIELD(numFilters, 1)
    FROZEN_LOAD_FIELD(hashTableBitSize, 2)
    FROZEN_LOAD_FIELD(filterByteSize, 3)
    FROZEN_LOAD_FIELD(fragmentSize, 4)
    FROZEN_LOAD_FIELD(seeds, 5)));

}}} // apache::thrift::frozen
